@*@inject HttpClient Http*@
@inject CustomHttpClient Http
@*<DxComboBox NullText="Seleccione Deposito..." ReadOnly="@EsSoloLectura"
                Data="@Depositos"
                TextFieldName="DES_DEP"
                SelectedItem="@DepositoSeleccionado"
                SelectedItemChanged="@((deposito)=> SelectedDepositoChanged(deposito))">
    </DxComboBox>*@
<SfDropDownList TItem="Deposito" TValue="int?" Readonly="@EsSoloLectura"
                Placeholder="Seleccione un tipo de operacion...">
    <SfDataManager Url="api/Depositos/GetDepositos" Adaptor="Adaptors.WebApiAdaptor" CrossDomain="true"></SfDataManager>
    <DropDownListFieldSettings Text="DES_DEP" Value="CG_DEP"></DropDownListFieldSettings>
    <DropDownListEvents TValue="int?" TItem="Deposito"
                        ValueChange="@(( deposito)=> SelectedDepositoChanged(deposito))">

    </DropDownListEvents>
</SfDropDownList>


@code {
    private IEnumerable<Deposito> Depositos = new List<Deposito>();

    [Parameter] public Deposito DepositoSeleccionado { get; set; } = new Deposito();
    [Parameter] public EventCallback<Deposito> OnSelectedDepositoChanged { get; set; }
    [Parameter] public bool EsSoloLectura { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        Depositos = await Http.GetFromJsonAsync<IEnumerable<Deposito>>("api/Depositos");
        //var nuevoItem = (new Deposito[] { new Deposito() {
        //    CG_DEP = 0,
        //    DES_DEP = "SELECCIONAR DEPOSITO"
        //} });

        //Depositos = nuevoItem.Concat(Depositos).ToArray();
        DepositoSeleccionado = Depositos.FirstOrDefault(d => d.CG_DEP == 0);

        await InvokeAsync(StateHasChanged);
    }

    private void SelectedDepositoChanged(Syncfusion.Blazor.DropDowns.ChangeEventArgs<int?,Deposito> depos)
    {
        DepositoSeleccionado = depos.ItemData;
        OnSelectedDepositoChanged.InvokeAsync(DepositoSeleccionado);
        InvokeAsync(StateHasChanged);
    }
    private void SelectedDepositoChanged(int? codigo, Deposito deposito)
    {

        InvokeAsync(StateHasChanged);
    }

    private void SelectedDepositoChanged(Syncfusion.Blazor.DropDowns.ChangeEventArgs<int?> dep)
    {
        if (dep.Value == (int)default)
        {
            return;
        }

        DepositoSeleccionado = Depositos.Where(d => d.CG_DEP == dep.Value).FirstOrDefault();
        OnSelectedDepositoChanged.InvokeAsync(DepositoSeleccionado);
        InvokeAsync(StateHasChanged);
    }

}
